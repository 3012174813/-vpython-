from vpython import *

scene = canvas(title="地球和卫星模型", width=800, height=600, background=color.white)

G = 6.67430e-11 
地球质量 = 5.972e24  
地球半径 = 6.371e6  
缩放比例 = 3e-6  
地球显示半径 = 地球半径 * 缩放比例  
卫星显示半径 = 地球半径 * 缩放比例  

轨道半径1 = 10e7  
轨道半径2 = 30e7  
初始位置1 = vector(轨道半径1, 0, 0)  
初始位置2 = vector(轨道半径2, 0, 0)  
卫星线速度大小1 = sqrt(G * 地球质量 / 轨道半径1)
卫星线速度大小2 = sqrt(G * 地球质量 / 轨道半径2)

线速度1 = vector(0, 卫星线速度大小1, 0)  
线速度2 = vector(0, 卫星线速度大小2, 0)  

地球 = sphere(pos=vector(0, 0, 0), radius=地球显示半径, texture=textures.earth)
卫星1 = sphere(pos=初始位置1 * 缩放比例, radius=卫星显示半径, color=color.black, make_trail=True)
卫星2 = sphere(pos=初始位置2 * 缩放比例, radius=卫星显示半径, color=color.yellow, make_trail=True)

时间步长 = 100  
总时间 = 0

while True:
    rate(300)  
    
    # 计算地球对卫星的引力 (F = -GMm/r^2 * r_hat)

    卫星1显示坐标 = 卫星1.pos - 地球.pos  
    卫星1实际距离 = mag(卫星1显示坐标) / 缩放比例 
    卫星1单位方向向量 = 卫星1显示坐标 / mag(卫星1显示坐标)  
    
    卫星1加速度大小 = G * 地球质量 / (卫星1实际距离 ** 2)
    卫星1加速度 = -卫星1加速度大小 * 卫星1单位方向向量  

    卫星2显示坐标 = 卫星2.pos - 地球.pos  
    卫星2实际距离 = mag(卫星2显示坐标) / 缩放比例 
    卫星2单位方向向量 = 卫星2显示坐标 / mag(卫星2显示坐标)  
    
    卫星2加速度大小 = G * 地球质量 / (卫星2实际距离 ** 2)
    卫星2加速度 = -卫星2加速度大小 * 卫星2单位方向向量  
    
    # 更新速度和位置（先用实际单位计算，再转换为显示坐标）
    线速度1 += 卫星1加速度 * 时间步长
    线速度2 += 卫星2加速度 * 时间步长
    卫星1.pos += 线速度1 * 时间步长 * 缩放比例
    卫星2.pos += 线速度2 * 时间步长 * 缩放比例
    
    总时间 += 时间步长
